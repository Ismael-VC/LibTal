( devices )
|00 @System     [ &vector $2 &wst      $1 &rst    $1 &eaddr  $2 &ecode  $1 &pad     $1 &r       $2 &g      $2 &b     $2 &debug  $1 &halt $1 ]
|10 @Console    [ &vector $2 &read     $1 &pad    $5 &write  $1 &error  $1                                                                  ]
|20 @Screen     [ &vector $2 &width    $2 &height $2 &auto   $1 &pad    $1 &x       $2 &y       $2 &addr   $2 &pixel $1 &sprite $1          ]
|30 @Audio0     [ &vector $2 &position $2 &output $1 &pad    $3 &adsr   $2 &length  $2 &addr    $2 &volume $1 &pitch $1                     ]
|40 @Audio1     [ &vector $2 &position $2 &output $1 &pad    $3 &adsr   $2 &length  $2 &addr    $2 &volume $1 &pitch $1                     ]
|50 @Audio2     [ &vector $2 &position $2 &output $1 &pad    $3 &adsr   $2 &length  $2 &addr    $2 &volume $1 &pitch $1                     ]
|60 @Audio3     [ &vector $2 &position $2 &output $1 &pad    $3 &adsr   $2 &length  $2 &addr    $2 &volume $1 &pitch $1                     ]
|80 @Controller [ &vector $2 &button   $1 &key    $1 &func   $1                                                                             ]
|90 @Mouse      [ &vector $2 &x        $2 &y      $2 &state  $1 &pad    $3 &scrollx $2 &scrolly $2                                          ]
|a0 @File0      [ &vector $2 &success  $2 &stat   $2 &delete $1 &append $1 &name    $2 &length  $2 &read   $2 &write $2                     ]
|b0 @File1      [ &vector $2 &success  $2 &stat   $2 &delete $1 &append $1 &name    $2 &length  $2 &read   $2 &write $2                     ]
|c0 @DateTime   [ &year   $2 &month    $1 &day    $1 &hour   $1 &minute $1 &second  $1 &dotw    $1 &doty   $2 &isdst $1                     ]


( macros )
%HALT { #01 .System/halt DEO } ( -- )
%DEBUG { #01 .System/debug DEO } ( -- )
%EMIT { .Console/write DEO } ( a -- )
%CALL2 { JSR2 } ( addr* -- )
%CALL { JSR }
%IF { JCN }
%RETURN { JMPr2 } ( -- )
%> { GTH }
%* { MUL }
%+ { ADD }
%& { AND }
%BREAK { BRK }
%++ { INC2 }
%\n { 0a }
%\s { 20 }
%\0 { 00 }
%WRITE { DEO }
%SWAP { SWP }
%SHIFT { SFT }
%COPY { DUP }
%LOADk { LDAk }
%NEXT { ++ LOADk }

%System/r-set { .System/r DEO2 }
%System/g-set { .System/g DEO2 }
%System/b-set { .System/b DEO2 }

%System/r-get { .System/r DEI2 }
%System/g-get { .System/g DEI2 }
%System/b-get { .System/b DEI2 }


( variables )
|0000


( program )
|0100 ( -> ) [
	( theme ) 
	#0fe5 System/r-set 
	#0fc5 System/g-set 
	#0f25 System/b-set

	;hello-str ;print-str CALL2

	HALT

	BREAK
] 


@print-str ( str* -- ) [
    (
    	Prints a null byte ( 00 ) terminated string.

    	# Usage

    	```
    	|0100 ( -> ) [
    		@hello-str "Hello \s "world! \n \0
			;hello-str ;print-str CALL2
			HALT
    	]
    	```

    )
	&while [
		LOADk EMIT
		NEXT ,&while IF

		POP2
	]

    RETURN
]


( data )
|2000
	@hello-str "Hello \s "world! \n \0
